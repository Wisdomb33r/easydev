<?php
/*********************************************************************************
 * Autogenerated script
 * EasyDev 1.1 copyright Patrick Mingard 2007
 * Any modification of this code can alter the behaviour of EasyDev 1.1 console 
 ********************************************************************************/

// require the includes
require_once 'includes.php';
require_once 'object_<% echo $this->name; %>.class.php';<%
foreach($this->fieldlist as $field){
  if($field->type == 'relation1N'){%>
require_once 'object_<% echo $field->label; %>.class.php';<%
  }
}%>

// first set a variable to indicate to which "mainmenu" this script belongs to in the administration console.
$adminMainMenu = <% echo $mainmenuid; %>;
 
// verify that the logged user has right to see this page
if(! $session_permissions[$adminMainMenu]){ // the user should not see this page because he do not has rights
  header('Location: main.php');
  exit;
}

if($_SERVER['REQUEST_METHOD'] == 'POST'){ // if server method request == POST
  $errors = array(); // to remember all the form errors

  // for datetime, need to construct the final value based on date + hour + minutes<%
foreach($this->fieldlist as $field){
  if($field->type == 'datetime'){%>
  $_POST['<% echo $field->label;%>'] = ($_POST['<% echo $field->label;%>date'] != '' ? $_POST['<% echo $field->label;%>date'].($_POST['<% echo $field->label;%>hour'] != '' && $_POST['<% echo $field->label;%>mins'] != '' ? ' '.$_POST['<% echo $field->label;%>hour'].':'.$_POST['<% echo $field->label;%>mins'] : '') : '');
  if(isset($_POST['<% echo $field->label;%>now']) && $_POST['<% echo $field->label; %>now'] == 'now'){
    $_POST['<% echo $field->label;%>'] = date('Y-m-d H:i'); // if the checkbox "CURRENT TIME" was checked, overwrite the time by the current time
    $_POST['<% echo $field->label;%>date'] = date('Y-m-d');
    $_POST['<% echo $field->label;%>hour'] = date('H');
    $_POST['<% echo $field->label;%>mins'] = date('i');
  }<%
  }
}%>
 
  // verify the type of the sent objects 
  $errors = <% echo $this->name; %>::verifyForm($_POST);

  // verify the values sent by the user for images (which are not verified by the verifyForm function)<%
foreach($this->fieldlist as $field){
  if($field->type == 'image'){%>
  $imageinfos<% echo $field->label;%> = null;
  // for edition I need to differentiate the case where the user wants to modify the object without changind the image and the case where the user
  // wants to insert a new object but forget to initialize an image. For this reason I require the $_FILES to exist for the name of the image in case
  // of edition (= skipping the no_file_error of getImageFromForm)
  if((isset($_GET['objectid']) && isset($_FILES['<% echo $field->label; %>']) && $_FILES['<% echo $field->label;%>']['error'] != UPLOAD_ERR_NO_FILE) || !isset($_GET['objectid'])){
  	$imageinfos<% echo $field->label; %> = <% echo $this->name; %>::getImageFromForm('<% echo $field->label; %>');

  	// append to $errors all the errors of the images
  	$errors = array_merge($errors, $imageinfos<% echo $field->label; %>[2]);
  }<%
  }
}%>
	  
  if(count($errors) == 0){ // if there is no errors in the values sent by user
    // store data in an object
    $object = null;
    if(isset($_GET['objectid']) && ($object = <% echo $this->name; %>::findByPrimaryId($_GET['objectid']))){ // we want to modify an object, need to retrieve it (if exists)

      // fill the object with the new values<%
foreach($this->fieldlist as $field){
  switch($field->type){
  case 'double':
  case 'string':
  case 'integer':
  case 'bool':
  case 'date':
  case 'datetime':
  case 'text': %>
      $object-><% echo $field->label; %> = $_POST['<% echo $field->label; %>'];<%
    break;
  case 'image':%>
      if($imageinfos<% echo $field->label; %> != null){
        $object-><% echo $field->label; %> = $imageinfos<% echo $field->label; %>[0];
        $object-><% echo $field->label; %>_type = $imageinfos<% echo $field->label; %>[1];
      }<%
    break;
  case 'relation1N':%>
      $object->relation1N<% echo $field->options['relationname']; %> = $_POST['<% echo $field->options['relationname']; %>'];<%
    break;
  }
}%>
    }
    else{ // we want to insert a new object, need to create a new one
      $object = new <% echo $this->name; %>(<%

// START ---- list all fields for the new object
$first = true;
foreach($this->fieldlist as $field){
  switch($field->type){
  case 'double':
  case 'string':
  case 'integer':
  case 'text':
  case 'datetime':
  case 'date':
  case 'bool': 
    if(!$first){
      echo ', ';
    }
    $first = false;
    echo '$_POST[\''.$field->label.'\']';
    break;
  case 'image':
    if(!$first){
      echo ', ';
    }
    $first = false;
    echo '$imageinfos'.$field->label.'[0], $imageinfos'.$field->label.'[1]';
    break;
  case 'relation1N': // only if the type is a relation1N, need to select the relationname
    break;
  }
} 

// END ---- list all fields for the new object
 %>);

      // set all the relations1N that have been chosen<%
foreach($this->fieldlist as $field){
  if($field->type == 'relation1N'){%>
      $object->setrelation<% echo $field->options['relationname'];%>(<% echo $field->label;%>::findByPrimaryId($_POST['<% echo $field->options['relationname'];%>']));
<%
  }
}%>
    }
    // store the object in the database
    $object->store();

    $objectid = $object->id;

    // fill the log
    $query = 'INSERT INTO '.LOGS.' (log) VALUES ("'.date('Y-m-d H:i').' : '.(isset($_GET['objectid']) ? 'Modification on object \"<% echo $this->name;%>\" with id \"'.$_GET['objectid'].'\" done by '.$_SESSION[SESSION_NAME].'.' : 'New object \"<% echo $this->name; %>\" with id \"'.$objectid.'\" added by '.$_SESSION[SESSION_NAME].'.').'")';
    mysql_query($query) or die('Error while inserting log.<br />'.$query);
    
    // redirect on the same page but with a message for indicating that the entry was done successfully
    header('Location: '.(isset($_GET['objectid']) ? 'objectdelete_<% echo $this->name; %>.php' : $_SERVER['PHP_SELF']).'?'.CURRENTMENU.'='.$_GET[CURRENTMENU].'&action='.(isset($_GET['objectid']) ? 'confirmmodify' : 'confirminsert'));
    exit;
  }
  else{ // there is some errors // case there is some errors in the generated script
    $_SESSION[SESSION_ERRORS] = $errors;
    $_SESSION[SESSION_POSTED] = $_POST;
    header('Location: '.$_SERVER['PHP_SELF'].'?'.CURRENTMENU.'='.$_GET[CURRENTMENU]);
    exit;
  }
}
else{ // GET request method // if server method request == GET
  // initialize a new object for the case of edition of an existing object or if there is some POST data
  $object = false;

  // verify if there is a $_GET['objectid'] set. if there is one, the script is called to modify an existing object, otherwise to create a new one
  if(isset($_GET['objectid'])){
    $object = <% echo $this->name; %>::findByPrimaryId($_GET['objectid']);

    if(! $object){
      header('Location: '.$_SERVER['PHP_SELF'].'?'.CURRENTMENU.'='.$_GET[CURRENTMENU]);
      exit;
    }
  }

  // includes the header of the page
  include 'adminheader.php';
  
  // if $_GET['action'] is set and is equal to "confirminsert", print a message
  if(isset($_GET['action']) && $_GET['action'] == 'confirminsert'){
    echo '<p><strong>'.$translator->translate('generator_confirm_insert').'</strong></p>';
  }

  // Verify if there is some errors and posted values.
  if(isset($_SESSION[SESSION_ERRORS]) && isset($_SESSION[SESSION_POSTED])){
    
    $errors = $_SESSION[SESSION_ERRORS];
    $posted = $_SESSION[SESSION_POSTED];
    
    // print the errors
    echo '<ul class="errors">';
    foreach ($errors as $error){
      echo '<li class="errors">'.$error."</li>\n";
    }
    echo "</ul>\n";
    
    // restore the values of the form in a temporary object
    $object = new <% echo $this->name; %>(<%
// START ---- list all fields for the new object
$first = true;
foreach($this->fieldlist as $field){
  switch($field->type){
  case 'double':
  case 'string':
  case 'integer':
  case 'bool':
  case 'date':
  case 'datetime':
  case 'text':
    if(!$first){
      echo ', ';
    }
    $first = false;
    echo 'stripslashes($posted[\''.$field->label.'\'])';
    break;
  case 'image':
    if(!$first){
      echo ', ';
    }
    $first = false;
    echo 'null, null';
    break;
  case 'relation1N': 
    break;
  }
} 

// END ---- list all fields for the new object
%>);

// restore all relation 1N<%
foreach($this->fieldlist as $field){
  if($field->type == 'relation1N'){%>
    $object->relation1N<% echo $field->options['relationname'];%> = $posted['<% echo $field->options['relationname'];%>'];<%
  }
}
%>

    // do not forget to remove these two variables
    unset($_SESSION[SESSION_ERRORS]);
    unset($_SESSION[SESSION_POSTED]);
  }

  // add a title to the page
  if(isset($_GET['objectid'])){
    echo '<p><strong>'.$translator->translate('generator_modify_page_title').'</strong></p>';
  }
  else{
    echo '<p><strong>'.$translator->translate('generator_add_page_title').'</strong></p>';
  }
  
  $action = $_SERVER['PHP_SELF'].'?'.CURRENTMENU.'='.$_GET[CURRENTMENU].(isset($_GET['objectid']) ? '&objectid='.$_GET['objectid'] : '');
  echo <% echo $this->name; %>::getForm($translator->translate('generator_add_page_submit_button'), $object, $action);

  // include the footer of the page
  include 'adminfooter.php';
}
?>
